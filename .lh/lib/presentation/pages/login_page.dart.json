{
    "sourceFile": "lib/presentation/pages/login_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1728426846417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728426851727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   final _emailController = TextEditingController();\r\n   final _passwordController = TextEditingController();\r\n   bool _isPasswordVisible = false;\r\n \r\n-  void _login\r\n+  void _login()\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     final border = OutlineInputBorder(\r\n"
                },
                {
                    "date": 1728426858582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   final _emailController = TextEditingController();\r\n   final _passwordController = TextEditingController();\r\n   bool _isPasswordVisible = false;\r\n \r\n-  void _login()\r\n+  void _login()async{}\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     final border = OutlineInputBorder(\r\n"
                }
            ],
            "date": 1728426846417,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:tody_app/core/app_colors.dart';\r\nimport 'package:tody_app/presentation/widgets/app_action_button.dart';\r\n\r\nclass LoginPage extends StatefulWidget {\r\n  const LoginPage({super.key});\r\n\r\n  @override\r\n  State<LoginPage> createState() => _LoginPageState();\r\n}\r\n\r\nclass _LoginPageState extends State<LoginPage> {\r\n  final _formKey = GlobalKey<FormState>();\r\n  final _emailController = TextEditingController();\r\n  final _passwordController = TextEditingController();\r\n  bool _isPasswordVisible = false;\r\n\r\n  void \r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final border = OutlineInputBorder(\r\n      borderSide: BorderSide(\r\n        color: AppColors.onPrimary,\r\n      ),\r\n    );\r\n\r\n    final errorBorder = border.copyWith(\r\n      borderSide: const BorderSide(color: Colors.redAccent),\r\n    );\r\n\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: const Center(\r\n          child: Text('Login'),\r\n        ),\r\n      ),\r\n      body: Padding(\r\n        padding: const EdgeInsets.all(16.0),\r\n        child: Form(\r\n          key: _formKey,\r\n          child: Column(\r\n            children: [\r\n              TextFormField(\r\n                controller: _emailController,\r\n                decoration: InputDecoration(\r\n                  labelText: 'Email',\r\n                  enabledBorder: border,\r\n                  focusedBorder: border,\r\n                  errorBorder: errorBorder,\r\n                  focusedErrorBorder: errorBorder,\r\n                ),\r\n                keyboardType: TextInputType.emailAddress,\r\n                validator: (value) {\r\n                  if (value == null || value.isEmpty) {\r\n                    return 'Email is reuired';\r\n                  }\r\n                  return null;\r\n                },\r\n              ),\r\n              const SizedBox(height: 24),\r\n              TextFormField(\r\n                controller: _passwordController,\r\n                decoration: InputDecoration(\r\n                  labelText: 'Password',\r\n                  enabledBorder: border,\r\n                  focusedBorder: border,\r\n                  errorBorder: errorBorder,\r\n                  focusedErrorBorder: errorBorder,\r\n                  suffixIcon: IconButton(\r\n                    onPressed: () {\r\n                      setState(() {\r\n                        _isPasswordVisible = !_isPasswordVisible;\r\n                      });\r\n                    },\r\n                    icon: Icon(\r\n                      _isPasswordVisible\r\n                          ? Icons.visibility\r\n                          : Icons.visibility_off,\r\n                    ),\r\n                  ),\r\n                ),\r\n                keyboardType: TextInputType.visiblePassword,\r\n                validator: (value) {\r\n                  if (value == null || value.isEmpty || value.length < 6) {\r\n                    return 'Password is required and must be at least 6 characters';\r\n                  }\r\n                  return null;\r\n                },\r\n                obscureText: !_isPasswordVisible,\r\n                obscuringCharacter: '*',\r\n              ),\r\n              const SizedBox(height: 56),\r\n              AppActionButton(\r\n                title: 'Login',\r\n                onPressed: () {\r\n                  if (_formKey.currentState!.validate()) {\r\n                    final email = _emailController.text;\r\n                    final password = _passwordController.text;\r\n\r\n                    print('Email: ${email} Password ${password}');\r\n                  }\r\n                  ;\r\n                },\r\n              )\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @override\r\n  void dispose() {\r\n    _emailController.dispose();\r\n    _passwordController.dispose();\r\n    super.dispose();\r\n  }\r\n}\r\n"
        }
    ]
}